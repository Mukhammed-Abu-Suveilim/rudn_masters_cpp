// #### **Задача 4: Обмен значений (Ссылки)**
// Напишите программу, которая демонстрирует разницу между передачей по значению, по указателю и по ссылке.
// 1.  Создайте функцию `void swapValues(int a, int b)`, которая пытается обменять значения (не получится).
// 2.  Создайте функцию `void swapValues(int* a, int* b)`, которая обменивает значения с помощью указателей.
// 3.  Создайте функцию `void swapValues(int& a, int& b)`, которая обменивает значения с помощью ссылок.
// 4.  В `main` покажите работу всех трех функций на примере двух целых чисел.

// **Цель:** Четкое понимание различий между механизмами передачи параметров.

#include <iostream>

// Передача по значению (не работает для обмена)
void swapValues(int a, int b) {
    int temp = a;
    a = b;
    b = temp;
    std::cout << "Внутри swapValues (по значению): a = " << a << ", b = " << b << std::endl;
}

// Передача по указателю
void swapValues(int* a, int* b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

// Передача по ссылке
void swapValues2(int& a, int& b) {
    int temp = a;
    a = b;
    b = temp;
}

int main() {
    int x = 5, y = 10;

    // Исходные значения
    std::cout << "Исходные значения: x = " << x << ", y = " << y << std::endl;

    // Попытка обмена по значению
    swapValues(x, y);
    std::cout << "После swapValues (по значению): x = " << x << ", y = " << y << std::endl;

    // Обмен по указателю
    swapValues(&x, &y);
    std::cout << "После swapValues (по указателю): x = " << x << ", y = " << y << std::endl;

    // Возвращаем значения обратно для демонстрации ссылок
    x = 5; y = 10;
    std::cout << "Вернули обратно: x = " << x << ", y = " << y << std::endl;

    // Обмен по ссылке
    swapValues2(x, y);
    std::cout << "После swapValues (по ссылке): x = " << x << ", y = " << y << std::endl;

    return 0;
}
