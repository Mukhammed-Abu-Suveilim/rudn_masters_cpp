// #### **Задача 6: Работа с массивами через указатели (Указатели, арифметика указателей)**
// Напишите программу, которая выполняет следующие операции с целочисленным массивом, используя *только указатели и арифметику указателей* (без использования оператора индексации `[]`).
// 1.  Заполните массив из 10 чисел последовательностью Фибоначчи.
// 2.  Найдите сумму всех элементов массива.
// 3.  Найдите минимальный элемент в массиве.
// 4.  Скопируйте содержимое первого массива во второй массив в обратном порядке.

// **Цель:** Глубокое понимание связи массивов и указателей.

#include <iostream>

int main() {
    const int size = 10;
    int fib[size];
    int *ptr = fib;

    // 1. Заполнение массива последовательностью Фибоначчи
    *ptr = 0;
    *(ptr + 1) = 1;
    for (int *p = ptr + 2; p < ptr + size; ++p) {
        *p = *(p - 1) + *(p - 2);
    }

    // Вывод массива Фибоначчи
    std::cout << "Массив Фибоначчи: ";
    for (int *p = ptr; p < ptr + size; ++p) {
        std::cout << *p << " ";
    }
    std::cout << std::endl;

    // 2. Нахождение суммы всех элементов массива
    int sum = 0;
    for (int *p = ptr; p < ptr + size; ++p) {
        sum += *p;
    }
    std::cout << "Сумма элементов: " << sum << std::endl;

    // 3. Нахождение минимального элемента
    int min = *ptr;
    for (int *p = ptr + 1; p < ptr + size; ++p) {
        if (*p < min) {
            min = *p;
        }
    }
    std::cout << "Минимальный элемент: " << min << std::endl;

    // 4. Копирование в обратном порядке во второй массив
    int reversed[size];
    int *reversedPtr = reversed;
    for (int *p = ptr + size - 1; p >= ptr; --p, ++reversedPtr) {
        *reversedPtr = *p;
    }

    // Вывод второго массива
    std::cout << "Массив в обратном порядке: ";
    for (int *p = reversed; p < reversed + size; ++p) {
        std::cout << *p << " ";
    }
    std::cout << std::endl;

    return 0;
}
